function [F2] = facehex2face(F1, H1, H,V)
 if nargin==0
    file_name = 'sing1.vtk';
    mesh = load_vtk(file_name);
    V = mesh.points;
    H = mesh.cells;
    H1 = H(1,:);
    [~,E,F,H,~,~,~,nH] = datastructure(V,H);
    F1 = F(1,:);
 end
    [~,E,F,H,~,~,~,nH] = datastructure(V,H);
    %find all faces on H1
    F_h1 = hex2face(H1); %6*4 (6 faces per hex)
    %find all edges on F1
    E_f1 = face2edge(F1);
    %find all edges on F2- F6
    E_f = [];
    for i =2:6
    E_f2 = face2edge(F_h1(2,:)); %6*(4*2) (4 edges per face)
    end
    Fi = find(all((sort(E_f1, 2)- sort(E_f(i), 2))==0, 2))
    
    % check if F2-F6 share edges with F1
%     for 
%         [] = ismember(sort([F12(:,1),F12(:,2)],2),sort(Ef1(i,:),2),"rows");
%         if 1
%         end
%     end
%     [~,Fi] = ismember(sort(F12,2), sort(F,2), 'rows'); %to find the index of the one to exclude
%     F2 = hex2face(H2); %all the faces in the hex
%     % want to find the face that exclude all the vertices in F12
%     [~,El] = ismember(sort([F12(:,1),F12(:,2)],2),sort(Ef(i,:),2),"rows");
%     sort(F12(1,i), 
%     for i=1:nE
%     for i=1:4
%         [~,El] = ismember(sort([F12(:,1),F12(:,2)],2),sort(Ef(i,:),2),"rows");
%         [~,E2] = ismember(sort([F12(:,2),F12(:,3)],2),sort(Ef(i,:),2),"rows");
%         [~,E3] = ismember(sort([F12(:,3),F12(:,4)],2),sort(Ef(i,:),2),"rows");
%         [~,E4] = ismember(sort([F12(:,4),F12(:,1)],2),sort(Ef(i,:),2),"rows");
    %[~,El] = ismember(sort(Ef(i,:),2),sort(F2,2),"rows");
%     end
    F2 = setdiff(Fj,Fi); %the one that doesn't include any pts in the intial face
    
    
end
